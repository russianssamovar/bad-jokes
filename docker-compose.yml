services:
  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  api:
    build: ./api
    depends_on:
      db:
        condition: service_healthy
    environment:
      ENV: local
      DB_DRIVER: postgres
      DB_CONNECTION_STRING: "host=db user=${POSTGRES_USER} password=${POSTGRES_PASSWORD} dbname=${POSTGRES_DB} sslmode=disable"
      HTTP_SERVER_ADDRESS: "0.0.0.0:9999"
      HTTP_SERVER_TIMEOUT: "4s"
      HTTP_SERVER_IDLE_TIMEOUT: "60s"
      JWT_SECRET: "${JWT_SECRET_KEY}"
      GOOGLE_CLIENT_ID: "${GOOGLE_CLIENT_ID}"
      GOOGLE_CLIENT_SECRET: "${GOOGLE_CLIENT_SECRET}"
      GITHUB_CLIENT_ID: "${GITHUB_CLIENT_ID}"
      GITHUB_CLIENT_SECRET: "${GITHUB_CLIENT_SECRET}"
      BASE_OAUTH_URL: "${BASE_OAUTH_URL}"
      CALLBACK_OAUTH_URL: "${CALLBACK_OAUTH_URL}"
    ports:
      - "127.0.0.1:9999:9999"

  frontend:
    depends_on:
      - db
      - api
    build:
      context: ./frontend
    ports:
      - "127.0.0.1:8080:80"

volumes:
  db_data: 